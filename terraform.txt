2023-03-13T15:51:21.038+0800 [INFO]  Terraform version: 1.3.7
2023-03-13T15:51:21.054+0800 [DEBUG] using github.com/hashicorp/go-tfe v1.9.0
2023-03-13T15:51:21.054+0800 [DEBUG] using github.com/hashicorp/hcl/v2 v2.15.0
2023-03-13T15:51:21.054+0800 [DEBUG] using github.com/hashicorp/terraform-config-inspect v0.0.0-20210209133302-4fd17a0faac2
2023-03-13T15:51:21.054+0800 [DEBUG] using github.com/hashicorp/terraform-svchost v0.0.0-20200729002733-f050f53b9734
2023-03-13T15:51:21.054+0800 [DEBUG] using github.com/zclconf/go-cty v1.12.1
2023-03-13T15:51:21.054+0800 [INFO]  Go runtime version: go1.19.4
2023-03-13T15:51:21.057+0800 [INFO]  CLI args: []string{"C:\\Users\\Brett.Odgers-Jewell\\terraform.exe", "apply"}
2023-03-13T15:51:21.057+0800 [TRACE] Stdout is a terminal of width 213
2023-03-13T15:51:21.057+0800 [TRACE] Stderr is a terminal of width 213
2023-03-13T15:51:21.057+0800 [TRACE] Stdin is a terminal
2023-03-13T15:51:21.057+0800 [DEBUG] Attempting to open CLI config file: C:\Users\Brett.Odgers-Jewell\AppData\Roaming\terraform.rc
2023-03-13T15:51:21.057+0800 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2023-03-13T15:51:21.057+0800 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2023-03-13T15:51:21.057+0800 [DEBUG] ignoring non-existing provider search directory C:\Users\Brett.Odgers-Jewell\AppData\Roaming\terraform.d\plugins
2023-03-13T15:51:21.057+0800 [DEBUG] ignoring non-existing provider search directory C:\Users\Brett.Odgers-Jewell\AppData\Roaming\HashiCorp\Terraform\plugins
2023-03-13T15:51:21.057+0800 [INFO]  CLI command args: []string{"apply"}
2023-03-13T15:51:21.108+0800 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2023-03-13T15:51:21.108+0800 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2023-03-13T15:51:21.108+0800 [DEBUG] New state was assigned lineage "920d3ea5-de71-d95c-ec62-5db6885c8a59"
2023-03-13T15:51:21.108+0800 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2023-03-13T15:51:21.108+0800 [TRACE] Meta.Backend: instantiated backend of type <nil>
2023-03-13T15:51:21.108+0800 [DEBUG] checking for provisioner in "."
2023-03-13T15:51:21.109+0800 [DEBUG] checking for provisioner in "C:\\Users\\Brett.Odgers-Jewell"
2023-03-13T15:51:21.109+0800 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2023-03-13T15:51:21.109+0800 [INFO]  backend/local: starting Apply operation
2023-03-13T15:51:21.109+0800 [TRACE] backend/local: requesting state manager for workspace "default"
2023-03-13T15:51:21.109+0800 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2023-03-13T15:51:21.110+0800 [TRACE] backend/local: requesting state lock for workspace "default"
2023-03-13T15:51:22.721+0800 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2023-03-13T15:51:22.721+0800 [TRACE] statemgr.Filesystem: no previously-stored snapshot exists
2023-03-13T15:51:22.721+0800 [TRACE] statemgr.Filesystem: locking terraform.tfstate using LockFileEx
2023-03-13T15:51:22.721+0800 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2023-03-13T15:51:22.722+0800 [TRACE] backend/local: reading remote state for workspace "default"
2023-03-13T15:51:22.722+0800 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2023-03-13T15:51:22.722+0800 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2023-03-13T15:51:22.722+0800 [TRACE] statemgr.Filesystem: read nil snapshot
2023-03-13T15:51:22.722+0800 [TRACE] backend/local: populating backend.LocalRun for current working directory
2023-03-13T15:51:22.726+0800 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2023-03-13T15:51:22.726+0800 [TRACE] statemgr.Filesystem: unlocked by closing terraform.tfstate
2023-07-14T15:00:28.042+0800 [INFO]  Terraform version: 1.3.7
2023-07-14T15:00:28.105+0800 [DEBUG] using github.com/hashicorp/go-tfe v1.9.0
2023-07-14T15:00:28.105+0800 [DEBUG] using github.com/hashicorp/hcl/v2 v2.15.0
2023-07-14T15:00:28.105+0800 [DEBUG] using github.com/hashicorp/terraform-config-inspect v0.0.0-20210209133302-4fd17a0faac2
2023-07-14T15:00:28.105+0800 [DEBUG] using github.com/hashicorp/terraform-svchost v0.0.0-20200729002733-f050f53b9734
2023-07-14T15:00:28.105+0800 [DEBUG] using github.com/zclconf/go-cty v1.12.1
2023-07-14T15:00:28.105+0800 [INFO]  Go runtime version: go1.19.4
2023-07-14T15:00:28.105+0800 [INFO]  CLI args: []string{"C:\\Users\\Brett.Odgers-Jewell\\terraform.exe", "init"}
2023-07-14T15:00:28.106+0800 [TRACE] Stdout is a terminal of width 226
2023-07-14T15:00:28.106+0800 [TRACE] Stderr is a terminal of width 226
2023-07-14T15:00:28.106+0800 [TRACE] Stdin is a terminal
2023-07-14T15:00:28.109+0800 [DEBUG] Attempting to open CLI config file: C:\Users\Brett.Odgers-Jewell\AppData\Roaming\terraform.rc
2023-07-14T15:00:28.109+0800 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2023-07-14T15:00:28.109+0800 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2023-07-14T15:00:28.109+0800 [DEBUG] ignoring non-existing provider search directory C:\Users\Brett.Odgers-Jewell\AppData\Roaming\terraform.d\plugins
2023-07-14T15:00:28.110+0800 [DEBUG] ignoring non-existing provider search directory C:\Users\Brett.Odgers-Jewell\AppData\Roaming\HashiCorp\Terraform\plugins
2023-07-14T15:00:28.111+0800 [INFO]  CLI command args: []string{"init"}
2023-07-14T15:00:28.120+0800 [TRACE] ModuleInstaller: installing child modules for . into .terraform\modules
2023-07-14T15:00:28.127+0800 [DEBUG] Module installer: begin aks_name
2023-07-14T15:00:28.127+0800 [TRACE] ModuleInstaller: aks_name is not yet installed
2023-07-14T15:00:28.127+0800 [TRACE] ModuleInstaller: cleaning directory .terraform\modules\aks_name prior to install of aks_name
2023-07-14T15:00:28.127+0800 [TRACE] ModuleInstaller: aks_name address "git::https://dev.azure.com/innersource/Merlion/_git/tf-module-az-naming-convention?ref=main" will be handled by go-getter
2023-07-14T15:00:28.127+0800 [TRACE] getmodules: fetching "git::https://dev.azure.com/innersource/Merlion/_git/tf-module-az-naming-convention?ref=main" to ".terraform\\modules\\aks_name"
2023-07-14T15:00:43.540+0800 [TRACE] ModuleInstaller: aks_name "git::https://dev.azure.com/innersource/Merlion/_git/tf-module-az-naming-convention?ref=main" was downloaded to .terraform\modules\aks_name
2023-07-14T15:00:43.558+0800 [DEBUG] Module installer: aks_name installed at .terraform\modules\aks_name
2023-07-14T15:00:43.558+0800 [DEBUG] Module installer: begin diagnostics
2023-07-14T15:00:43.558+0800 [TRACE] ModuleInstaller: diagnostics is not yet installed
2023-07-14T15:00:43.558+0800 [TRACE] ModuleInstaller: cleaning directory .terraform\modules\diagnostics prior to install of diagnostics
2023-07-14T15:00:43.558+0800 [TRACE] ModuleInstaller: diagnostics address "git::https://dev.azure.com/innersource/Merlion/_git/tf-module-az-diagnostic-settings?ref=main" will be handled by go-getter
2023-07-14T15:00:43.558+0800 [TRACE] getmodules: fetching "git::https://dev.azure.com/innersource/Merlion/_git/tf-module-az-diagnostic-settings?ref=main" to ".terraform\\modules\\diagnostics"
2023-07-14T15:01:00.792+0800 [TRACE] ModuleInstaller: diagnostics "git::https://dev.azure.com/innersource/Merlion/_git/tf-module-az-diagnostic-settings?ref=main" was downloaded to .terraform\modules\diagnostics
2023-07-14T15:01:00.814+0800 [DEBUG] Module installer: diagnostics installed at .terraform\modules\diagnostics
2023-07-14T15:01:00.814+0800 [DEBUG] Module installer: begin diagnostics.diagnostic_name
2023-07-14T15:01:00.814+0800 [TRACE] ModuleInstaller: diagnostics.diagnostic_name is not yet installed
2023-07-14T15:01:00.814+0800 [TRACE] ModuleInstaller: cleaning directory .terraform\modules\diagnostics.diagnostic_name prior to install of diagnostics.diagnostic_name
2023-07-14T15:01:00.814+0800 [TRACE] ModuleInstaller: diagnostics.diagnostic_name address "git::https://dev.azure.com/innersource/Merlion/_git/tf-module-az-naming-convention?ref=main" will be handled by go-getter
2023-07-14T15:01:00.815+0800 [TRACE] getmodules: copying previous install of "git::https://dev.azure.com/innersource/Merlion/_git/tf-module-az-naming-convention?ref=main" from .terraform\modules\aks_name to .terraform\modules\diagnostics.diagnostic_name
2023-07-14T15:01:00.833+0800 [TRACE] ModuleInstaller: diagnostics.diagnostic_name "git::https://dev.azure.com/innersource/Merlion/_git/tf-module-az-naming-convention?ref=main" was downloaded to .terraform\modules\diagnostics.diagnostic_name
2023-07-14T15:01:00.836+0800 [DEBUG] Module installer: diagnostics.diagnostic_name installed at .terraform\modules\diagnostics.diagnostic_name
2023-07-14T15:01:00.836+0800 [TRACE] modsdir: writing modules manifest to .terraform\modules\modules.json
2023-07-14T15:01:00.854+0800 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2023-07-14T15:01:00.854+0800 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2023-07-14T15:01:00.854+0800 [DEBUG] New state was assigned lineage "911f3e2c-a7ea-1da3-b691-e4392fa5392f"
2023-07-14T15:01:00.854+0800 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2023-07-14T15:01:00.854+0800 [TRACE] Meta.Backend: instantiated backend of type <nil>
2023-07-14T15:01:00.854+0800 [DEBUG] checking for provisioner in "."
2023-07-14T15:01:00.854+0800 [DEBUG] checking for provisioner in "C:\\Users\\Brett.Odgers-Jewell"
2023-07-14T15:01:00.855+0800 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2023-07-14T15:01:00.855+0800 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2023-07-14T15:01:00.855+0800 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2023-07-14T15:01:00.855+0800 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2023-07-14T15:01:00.855+0800 [TRACE] statemgr.Filesystem: read nil snapshot
2023-07-14T15:01:00.856+0800 [DEBUG] Service discovery for registry.terraform.io at https://registry.terraform.io/.well-known/terraform.json
2023-07-14T15:01:00.856+0800 [TRACE] HTTP client GET request to https://registry.terraform.io/.well-known/terraform.json
2023-07-14T15:01:01.086+0800 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/azurerm/versions
2023-07-14T15:01:01.086+0800 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/azurerm/versions
2023-07-14T15:01:01.215+0800 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/tls/versions
2023-07-14T15:01:01.215+0800 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/tls/versions
2023-07-14T15:01:01.342+0800 [TRACE] providercache.fillMetaCache: scanning directory .terraform\providers
2023-07-14T15:01:01.342+0800 [TRACE] getproviders.SearchLocalDirectory: failed to resolve symlinks for .terraform\providers: CreateFile .terraform\providers: The system cannot find the file specified.
2023-07-14T15:01:01.342+0800 [TRACE] providercache.fillMetaCache: error while scanning directory .terraform\providers: cannot search .terraform\providers: CreateFile .terraform\providers: The system cannot find the file specified.
2023-07-14T15:01:01.342+0800 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/azurerm/3.65.0/download/windows/amd64
2023-07-14T15:01:01.342+0800 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/azurerm/3.65.0/download/windows/amd64
2023-07-14T15:01:01.701+0800 [DEBUG] GET https://releases.hashicorp.com/terraform-provider-azurerm/3.65.0/terraform-provider-azurerm_3.65.0_SHA256SUMS
2023-07-14T15:01:01.701+0800 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-azurerm/3.65.0/terraform-provider-azurerm_3.65.0_SHA256SUMS
2023-07-14T15:01:01.885+0800 [DEBUG] GET https://releases.hashicorp.com/terraform-provider-azurerm/3.65.0/terraform-provider-azurerm_3.65.0_SHA256SUMS.72D7468F.sig
2023-07-14T15:01:01.885+0800 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-azurerm/3.65.0/terraform-provider-azurerm_3.65.0_SHA256SUMS.72D7468F.sig
2023-07-14T15:01:01.934+0800 [TRACE] providercache.Dir.InstallPackage: installing registry.terraform.io/hashicorp/azurerm v3.65.0 from https://releases.hashicorp.com/terraform-provider-azurerm/3.65.0/terraform-provider-azurerm_3.65.0_windows_amd64.zip
2023-07-14T15:01:01.934+0800 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-azurerm/3.65.0/terraform-provider-azurerm_3.65.0_windows_amd64.zip
2023-07-14T15:01:07.388+0800 [DEBUG] Provider signed by 34365D9472D7468F HashiCorp Security (hashicorp.com/security) <security@hashicorp.com>
2023-07-14T15:01:08.311+0800 [TRACE] providercache.fillMetaCache: scanning directory .terraform\providers
2023-07-14T15:01:08.312+0800 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/azurerm v3.65.0 for windows_amd64 at .terraform\providers\registry.terraform.io\hashicorp\azurerm\3.65.0\windows_amd64
2023-07-14T15:01:08.312+0800 [TRACE] providercache.fillMetaCache: including .terraform\providers\registry.terraform.io\hashicorp\azurerm\3.65.0\windows_amd64 as a candidate package for registry.terraform.io/hashicorp/azurerm 3.65.0
2023-07-14T15:01:08.814+0800 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform\providers
2023-07-14T15:01:08.814+0800 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/tls/4.0.4/download/windows/amd64
2023-07-14T15:01:08.814+0800 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/tls/4.0.4/download/windows/amd64
2023-07-14T15:01:08.937+0800 [DEBUG] GET https://releases.hashicorp.com/terraform-provider-tls/4.0.4/terraform-provider-tls_4.0.4_SHA256SUMS
2023-07-14T15:01:08.937+0800 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-tls/4.0.4/terraform-provider-tls_4.0.4_SHA256SUMS
2023-07-14T15:01:09.066+0800 [DEBUG] GET https://releases.hashicorp.com/terraform-provider-tls/4.0.4/terraform-provider-tls_4.0.4_SHA256SUMS.72D7468F.sig
2023-07-14T15:01:09.066+0800 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-tls/4.0.4/terraform-provider-tls_4.0.4_SHA256SUMS.72D7468F.sig
2023-07-14T15:01:09.134+0800 [TRACE] providercache.Dir.InstallPackage: installing registry.terraform.io/hashicorp/tls v4.0.4 from https://releases.hashicorp.com/terraform-provider-tls/4.0.4/terraform-provider-tls_4.0.4_windows_amd64.zip
2023-07-14T15:01:09.134+0800 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-tls/4.0.4/terraform-provider-tls_4.0.4_windows_amd64.zip
2023-07-14T15:01:10.017+0800 [DEBUG] Provider signed by 34365D9472D7468F HashiCorp Security (hashicorp.com/security) <security@hashicorp.com>
2023-07-14T15:01:10.115+0800 [TRACE] providercache.fillMetaCache: scanning directory .terraform\providers
2023-07-14T15:01:10.116+0800 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/azurerm v3.65.0 for windows_amd64 at .terraform\providers\registry.terraform.io\hashicorp\azurerm\3.65.0\windows_amd64
2023-07-14T15:01:10.116+0800 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/tls v4.0.4 for windows_amd64 at .terraform\providers\registry.terraform.io\hashicorp\tls\4.0.4\windows_amd64
2023-07-14T15:01:10.117+0800 [TRACE] providercache.fillMetaCache: including .terraform\providers\registry.terraform.io\hashicorp\tls\4.0.4\windows_amd64 as a candidate package for registry.terraform.io/hashicorp/tls 4.0.4
2023-07-14T15:01:10.117+0800 [TRACE] providercache.fillMetaCache: including .terraform\providers\registry.terraform.io\hashicorp\azurerm\3.65.0\windows_amd64 as a candidate package for registry.terraform.io/hashicorp/azurerm 3.65.0
2023-07-14T15:01:34.277+0800 [INFO]  Terraform version: 1.3.7
2023-07-14T15:01:34.292+0800 [DEBUG] using github.com/hashicorp/go-tfe v1.9.0
2023-07-14T15:01:34.292+0800 [DEBUG] using github.com/hashicorp/hcl/v2 v2.15.0
2023-07-14T15:01:34.292+0800 [DEBUG] using github.com/hashicorp/terraform-config-inspect v0.0.0-20210209133302-4fd17a0faac2
2023-07-14T15:01:34.292+0800 [DEBUG] using github.com/hashicorp/terraform-svchost v0.0.0-20200729002733-f050f53b9734
2023-07-14T15:01:34.292+0800 [DEBUG] using github.com/zclconf/go-cty v1.12.1
2023-07-14T15:01:34.292+0800 [INFO]  Go runtime version: go1.19.4
2023-07-14T15:01:34.292+0800 [INFO]  CLI args: []string{"C:\\Users\\Brett.Odgers-Jewell\\terraform.exe", "plan"}
2023-07-14T15:01:34.292+0800 [TRACE] Stdout is a terminal of width 226
2023-07-14T15:01:34.292+0800 [TRACE] Stderr is a terminal of width 226
2023-07-14T15:01:34.292+0800 [TRACE] Stdin is a terminal
2023-07-14T15:01:34.296+0800 [DEBUG] Attempting to open CLI config file: C:\Users\Brett.Odgers-Jewell\AppData\Roaming\terraform.rc
2023-07-14T15:01:34.296+0800 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2023-07-14T15:01:34.296+0800 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2023-07-14T15:01:34.296+0800 [DEBUG] ignoring non-existing provider search directory C:\Users\Brett.Odgers-Jewell\AppData\Roaming\terraform.d\plugins
2023-07-14T15:01:34.296+0800 [DEBUG] ignoring non-existing provider search directory C:\Users\Brett.Odgers-Jewell\AppData\Roaming\HashiCorp\Terraform\plugins
2023-07-14T15:01:34.296+0800 [INFO]  CLI command args: []string{"plan"}
2023-07-14T15:01:34.308+0800 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2023-07-14T15:01:34.308+0800 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2023-07-14T15:01:34.308+0800 [DEBUG] New state was assigned lineage "e70ab0c5-828e-33bc-01a9-64aced2c8e3a"
2023-07-14T15:01:34.308+0800 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2023-07-14T15:01:34.308+0800 [TRACE] Meta.Backend: instantiated backend of type <nil>
2023-07-14T15:01:34.308+0800 [TRACE] providercache.fillMetaCache: scanning directory .terraform\providers
2023-07-14T15:01:34.308+0800 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/azurerm v3.65.0 for windows_amd64 at .terraform\providers\registry.terraform.io\hashicorp\azurerm\3.65.0\windows_amd64
2023-07-14T15:01:34.308+0800 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/tls v4.0.4 for windows_amd64 at .terraform\providers\registry.terraform.io\hashicorp\tls\4.0.4\windows_amd64
2023-07-14T15:01:34.308+0800 [TRACE] providercache.fillMetaCache: including .terraform\providers\registry.terraform.io\hashicorp\azurerm\3.65.0\windows_amd64 as a candidate package for registry.terraform.io/hashicorp/azurerm 3.65.0
2023-07-14T15:01:34.308+0800 [TRACE] providercache.fillMetaCache: including .terraform\providers\registry.terraform.io\hashicorp\tls\4.0.4\windows_amd64 as a candidate package for registry.terraform.io/hashicorp/tls 4.0.4
2023-07-14T15:01:34.738+0800 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform\providers
2023-07-14T15:01:34.770+0800 [DEBUG] checking for provisioner in "."
2023-07-14T15:01:34.770+0800 [DEBUG] checking for provisioner in "C:\\Users\\Brett.Odgers-Jewell"
2023-07-14T15:01:34.770+0800 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2023-07-14T15:01:34.770+0800 [INFO]  backend/local: starting Plan operation
2023-07-14T15:01:34.770+0800 [TRACE] backend/local: requesting state manager for workspace "default"
2023-07-14T15:01:34.770+0800 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2023-07-14T15:01:34.770+0800 [TRACE] backend/local: requesting state lock for workspace "default"
2023-07-14T15:01:36.452+0800 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2023-07-14T15:01:36.454+0800 [TRACE] statemgr.Filesystem: no previously-stored snapshot exists
2023-07-14T15:01:36.454+0800 [TRACE] statemgr.Filesystem: locking terraform.tfstate using LockFileEx
2023-07-14T15:01:36.454+0800 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2023-07-14T15:01:36.455+0800 [TRACE] backend/local: reading remote state for workspace "default"
2023-07-14T15:01:36.455+0800 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2023-07-14T15:01:36.456+0800 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2023-07-14T15:01:36.456+0800 [TRACE] statemgr.Filesystem: read nil snapshot
2023-07-14T15:01:36.456+0800 [TRACE] backend/local: populating backend.LocalRun for current working directory
2023-07-14T15:01:36.465+0800 [TRACE] Config.VerifyDependencySelections: provider registry.terraform.io/hashicorp/azurerm has 3.65.0 to satisfy ""
2023-07-14T15:01:36.465+0800 [TRACE] Config.VerifyDependencySelections: provider registry.terraform.io/hashicorp/tls has 4.0.4 to satisfy ""
2023-07-14T15:01:36.465+0800 [DEBUG] backend/local: will prompt for input of unset required variables [resource_group_name aks_node_rg tags oms_agent location diag_object http_application_routing_enabled naming_convention_info key_vault_secrets_provider microsoft_defender aks_cplane_identity_info]
2023-07-14T15:01:36.465+0800 [DEBUG] command: asking for input: "var.aks_cplane_identity_info"
